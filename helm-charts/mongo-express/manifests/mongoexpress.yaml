apiVersion: apps/v1
kind: Deployment
metadata:
 name: mongo-express
 labels:
  # argocd.argoproj.io/instance: root
  app: mongo-express
  # app.kubernetes.io/instance: mongo-express
  # app.kubernetes.io/name: mongo-express
  # argocd.argoproj.io/instance: mongo-express

spec:
 replicas: 1
 selector:
  matchLabels:
   app: mongo-express
 template:
  metadata:
   labels:
     app: mongo-express
  spec:
    containers:
     - name: mongo-express
       image: mongo-express
       ports:
        - containerPort: 8081
       env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom:
           configMapKeyRef:
            name: mongo-express-configmap
            key: database_url
---
apiVersion: v1
kind: Service
metadata:
 name: mongo-express-service
spec:
 type: ClusterIP
 selector:
    app: mongo-express
 ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: mongo-express-ingress
 annotations:
    cert-manager.io/cluster-issuer: glab-main-dakhli
spec:
 ingressClassName: nginx
 tls:
      - hosts:
        - mongoexpress.newtenant.devops-scenarios.online
        secretName: mongoexpress-main-tls
 rules:
    - host: mongoexpress.newtenant.devops-scenarios.online
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
           service:
            name: mongo-express-service
            port:
             number: 8081
  # status:
  #   loadBalancer:
  #     ingress:
  #     - ip: 192.168.1.228
  #     - ip: 90.84.44.160
